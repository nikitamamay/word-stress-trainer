
const shuffle = (array) => {
  array.sort(() => Math.random() - 0.5);
};


const wordsDefault = [
  "аэропОрты",
  "балОванный",
  "балУясь",
  "бАнты",
  "болтлИва",
  "бОроду",
  "бралА",
  "бралАсь",
  "бухгАлтеров",
  "вернА",
  "вероисповЕдание",
  "взялА",
  "взялАсь",
  "включИт",
  "включЁн",
  "включЁнный",
  "влилАсь",
  "вОвремя",
  "водопровОд",
  "ворвалАсь",
  "воспринялА",
  "воспринЯть",
  "воссоздалА",
  "вручИт",
  "газопровОд",
  "гналА",
  "гналАсь",
  "граждАнство",
  "дефИс",
  "дешевИзна",
  "диспансЕр",
  "добелА",
  "добралА",
  "добралАсь",
  "довезЁнный",
  "дОверху",
  "договорЁнность",
  "дождалАсь",
  "дозвонИтся",
  "дозвонИться",
  "дозвонЯтся",
  "дозИровать",
  "докумЕнт",
  "донЕльзя",
  "дОнизу",
  "досУг",
  "дОсуха",
  "доЯр",
  "еретИк",
  "жалюзИ",
  "ждалА",
  "жилОсь",
  "жИться",
  "завИдно",
  "зАгнутый",
  "зАгодя",
  "закУпорив",
  "закУпорить",
  "зАнял",
  "занялА",
  "зАняли",
  "зАняло",
  "занятА",
  "зАнятый",
  "занЯть",
  "заперЕть",
  "заперЕться",
  "заперлА",
  "заперлАсь",
  "запертА",
  "зАпертый",
  "зАсветло",
  "заселенА",
  "заселЁнный",
  "зАтемно",
  "защемИт",
  "звалА",
  "звонИм",
  "звонИт",
  "звонИть",
  "звонИшь",
  "знАчимость",
  "знАчимый",
  "избалОванный",
  "баловАться",
  "Иксы",
  "исчЕрпать",
  "каталОг",
  "квартАл",
  "киломЕтр",
  "киоскЁр",
  "клАла",
  "клЕить",
  "контролЁр",
  "кОнусов",
  "кОнусы",
  "кормЯщий",
  "корЫсть",
  "крАлась",
  "крАны",
  "красИвее",
  "красИвейший",
  "кремЕнь",
  "кремнЯ",
  "кровоточАщий",
  "кУхонный",
  "лгалА",
  "лЕкторов",
  "лЕкторы",
  "лилА",
  "лилАсь",
  "ловкА",
  "лыжнЯ",
  "малЯр",
  "мЕстностей",
  "мозаИчный",
  "молЯщий",
  "мусоропровОд",
  "навЕрх",
  "навралА",
  "наделИт",
  "надОлго",
  "надорвалАсь",
  "нажИвший",
  "нажитА",
  "нАжитый",
  "назвалАсь",
  "накренИтся",
  "накренИться",
  "налИвший",
  "налилА",
  "налитА",
  "намЕрение",
  "нанЯвшийся",
  "нарвалА",
  "нарОст",
  "насорИт",
  "начАв",
  "начАвший",
  "начАвшись",
  "нАчал",
  "началА",
  "нАчали",
  "начатА",
  "нАчатый",
  "начАть",
  "нЕдруг",
  "недУг",
  "некролОг",
  "нЕнависть",
  "ненадОлго",
  "нефтепровОд",
  "низведЁн",
  "низведЁнный",
  "новостЕй",
  "нОвости",
  "нОготь",
  "нОгтя",
  "нормировАть",
  "обзвонИт",
  "обзвонИть",
  "облегчИт",
  "облегчИть",
  "облилАсь",
  "обнялАсь",
  "обогналА",
  "ободралА",
  "ободренА",
  "ободрИть",
  "ободрИться",
  "ободрИшься",
  "ободрЁн",
  "обострИть",
  "обострЁнный",
  "одолжИт",
  "одолжИть",
  "озлОбить",
  "оклЕить",
  "окружИт",
  "опломбировАть",
  "опОшлить",
  "определЁн",
  "определЁнный",
  "оптОвый",
  "освЕдомиться",
  "освЕдомишься",
  "отбылА",
  "отбЫть",
  "отдАв",
  "отдалА",
  "отдАть",
  "отключЁнный",
  "откУпорил",
  "откУпорить",
  "отозвалА",
  "отозвалАсь",
  "отозвАть",
  "отозвАться",
  "Отрочество",
  "партЕр",
  "перезвонИт",
  "перезвонИть",
  "перелилА",
  "плодоносИть",
  "повторИт",
  "повторИть",
  "повторЁнный",
  "поделЁнный",
  "поднЯв",
  "позвалА",
  "позвАть",
  "позвонИт",
  "позвонИть",
  "позвонИшь",
  "позЫв",
  "полилА",
  "полИть",
  "положИл",
  "положИть",
  "понЯв",
  "понЯвший",
  "понялА",
  "понЯть",
  "портфЕль",
  "пОручни",
  "послАла",
  "пОчестей",
  "премировАть",
  "прибЫв",
  "прИбыл",
  "прибылА",
  "прИбыло",
  "прибЫть",
  "придАное",
  "призЫв",
  "принУдить",
  "прИнял",
  "принялА",
  "прИняли",
  "прИнятый",
  "принЯть",
  "приручЁнный",
  "прожИвший",
  "прожОрлива",
  "прозорлИва",
  "рвалА",
  "сверлИт",
  "сверлИть",
  "сверлИшь",
  "свЁкла",
  "сирОты",
  "сиротА",
  "слИвовый",
  "смазлИва",
  "снялА",
  "снятА",
  "сОгнутый",
  "создАв",
  "создалА",
  "создАть",
  "созЫв",
  "сорвалА",
  "сорИт",
  "сорИть",
  "сортировАть",
  "срЕдства",
  "стАтуя",
  "столЯр",
  "суетлИва",
  "тамОжня",
  "тОртов",
  "тОрты",
  "убралА",
  "убыстрИть",
  "углубИть",
  "укрепИт",
  "формировАть",
  "цемЕнт",
  "цЕнтнер",
  "цепОчка",
  "чЕлюстей",
  "чЕрпать",
  "шАрфы",
  "школЯр",
  "шофЁр",
  "щемИт",
  "щемИть",
  "щЁлкать",
  "экспЕрт",
];

const vowels = ["у", "е", "ы", "а", "о", "э", "ё", "я", "и", "ю"];


let words = null;


const uploadToStorage = () => {
  localStorage.setItem("words", JSON.stringify(words));
};

const init = () => {
  words = JSON.parse(localStorage.getItem("words"));
  boxRight.style.display = "none";
  boxWrong.style.display = "none";
};


const resetWordsLists = () => {
  words = wordsDefault;
  uploadToStorage();
};


const chooseWordIndex = () => {
  return Math.floor(Math.random() * words.length);
};


const removeWord = (index) => {
  words.splice(index, 1);
  uploadToStorage();
};


const constructWord = (index) => {
  let word = words[index];
  let html = "";

  for (let i in word) {
    let letter = word[i];
    if (letter == letter.toUpperCase()) {
      html += `<span onclick="animationRight('${word}'); removeWord(${index})">${letter == "Ё" ? "е" : letter.toLowerCase()}</span>`;
    } else if (vowels.includes(letter)) {
      html += `<span onclick="animationWrong('${word}')">${letter}</span>`;
    } else {
      html += letter;
    }
  }

  return html;
};


const animationRight = (right) => {
  boxRight.style.display = "flex";
  boxRightWord.innerHTML = right;
  boxLog.innerHTML += `<p>${right}, ${words.length - 1}</p>`;
};

const animationWrong = (right) => {
  boxWrong.style.display = "flex";
  boxWrongWord.innerHTML = right;
  boxLog.innerHTML += `<p>${right}, ${words.length - 1}</p>`;
};

const nextWord = () => {
  if (words.length == 0) {
    resetWordsLists();
  }
  divWord.innerHTML = constructWord(chooseWordIndex());
};


const resume = () => {
  nextWord();
  boxRight.style.display = "none";
  boxWrong.style.display = "none";
};

// ---

let divWord = document.getElementById("word");
let boxRight = document.getElementById("boxRight");
let boxWrong = document.getElementById("boxWrong");
let boxRightWord = document.getElementById("boxRightWord");
let boxWrongWord = document.getElementById("boxWrongWord");
let boxLog = document.getElementById("log");

if (localStorage.getItem("words") === null) {
  resetWordsLists();
}

init();

resume();

